{"version":3,"sources":["png.png","App.js","reportWebVitals.js","index.js"],"names":["App","state","isLoading","getKick","a","fetch","then","response","json","data","setState","pledge","projects","pledged","backers","backers_count","this","console","log","className","src","png","alt","String","href","target","rel","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAAe,G,MAAA,IAA0B,iCC4D1BA,E,4MArDbC,MAAQ,CACNC,WAAW,G,EAKbC,Q,sBAAU,sBAAAC,EAAA,sDAERC,MAAM,8GAELC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAE1BF,MAAK,SAAAG,GAAI,OACR,EAAKC,SAAS,CACZC,OAAOF,EAAKG,SAAS,GAAGC,QACxBC,QAASL,EAAKG,SAAS,GAAGG,cAC1Bb,WAAW,OAVP,2C,kEAgBRc,KAAKb,UACLc,QAAQC,IAAI,Y,+BAKZ,OACE,qBAAKC,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAKF,UAAU,WAAWG,IAAI,SACxC,qBAAKH,UAAU,YAAf,SACGH,KAAKf,MAAMC,UACV,uBAAMiB,UAAU,SAAhB,oBAAgC,uBAAhC,SACA,oBAAGA,UAAU,SAAb,eACGI,OAAOP,KAAKf,MAAMU,QAAQ,uBAAMY,OAAOP,KAAKf,MAAMa,SADrD,gBAKJ,mBACEK,UAAU,WACVK,KAAK,oCACLC,OAAO,SACPC,IAAI,sBAJN,+B,GA1CUC,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.97cc522e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/png.c35ba13b.png\";","import './App.css';\nimport React from 'react';\nimport png from './png.png';\n\n\nclass App extends React.Component {\n\n  state = {\n    isLoading: true,\n    \n    \n  }\n\n  getKick = async () => { \n    \n    fetch(`https://cors-anywhere.herokuapp.com/https://www.kickstarter.com/projects/search.json?search=&term=diveroid`)\n    // We get the API response and receive data in JSON format...\n    .then(response => response.json())\n    // ...then we update the users state\n    .then(data =>\n      this.setState({\n        pledge:data.projects[0].pledged,\n        backers: data.projects[0].backers_count,\n        isLoading: false,\n      })\n    )\n  }\n\n  componentDidMount(){\n    this.getKick();\n    console.log(\"did it\");\n    }\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={png} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"pledgediv\">\n          {this.state.isLoading ? \n            <span className=\"pledge\">Loading<br/>...</span>:\n            <p className=\"pledge\">\n            $ {String(this.state.pledge)}<br/>{String(this.state.backers)} Backers\n            </p>\n          }\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://kickstarter.diveroid.com/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          DIVEROID\n        </a>\n      </header>\n    </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}